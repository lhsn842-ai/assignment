services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: nosto_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    depends_on:
      - redis
      - mongo
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_KEY=${APP_KEY}
      - SWOP_API_KEY=${SWOP_API_KEY}
      - MONGO_URI=${MONGO_URI}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - XDEBUG_MODE=debug
      - XDEBUG_CONFIG=client_host=host.docker.internal client_port=9003 idekey=PHPSTORM
    ports:
      - 9000:9000
      - 8000:8000
      - 5174:5174

  redis:
    image: redis:7-alpine
    container_name: nosto_redis
    restart: unless-stopped
    volumes:
      - redis-data:/data

  mongo:
    image: mongo:6.0
    container_name: nosto_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_DATABASE}
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
  influxdb:
    image: influxdb:2.7
    container_name: nosto_influxdb
    restart: unless-stopped
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
    ports:
      - 8086:8086
    volumes:
      - influxdb-data:/var/lib/influxdb2

  grafana:
    image: grafana/grafana:9.5.0
    container_name: nosto_grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
  prometheus:
    image: prom/prometheus:latest
    container_name: nosto_prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - app
  soketi:
    image: quay.io/soketi/soketi:0.17-16-alpine
    container_name: nosto_socketi
    environment:
      DEBUG: "1"
      DEFAULT_APP_ID: ${APP_ID}
      DEFAULT_APP_KEY: ${APP_KEY}
      DEFAULT_APP_SECRET: ${APP_SECRET}
    ports:
      - "6001:6001"
      - "9601:9601"
volumes:
  redis-data:
  mongo-data:
  influxdb-data:
  grafana-data:

networks:
  default:
    driver: bridge
